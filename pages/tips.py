import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st
import seaborn as sns
import io
from PIL import Image
#–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title='–ò—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —á–∞–µ–≤—ã—Ö', page_icon='üí∏', layout='wide')
if st.button('‚Üê –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'):
    st.switch_page("home.py")

st.title('–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —á–∞–µ–≤—ã—Ö üí∞')
st.badge("Tips", icon=":material/check:", color="green")
@st.cache_data
def load_data():
    path = 'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/tips.csv'
    return  pd.read_csv(path)
tips= load_data()
#st.dataframe(tips.head(20))
st.markdown('–í—ã–±–∏—Ä–∞–π –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∏ —Å–º–æ—Ç—Ä–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç')
# st.markdown("""
# <style>
#     .stButton>button {
#         display: block;
#         margin: 0 auto;
#     }
# </style>
# """, unsafe_allow_html=True)
# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∏ –∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
col1, col2, col3 = st.columns(3)
with col1:
    show_hist= st.button('–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Å—á–µ—Ç–æ–≤')
with col2:
    show_scatter_sex= st.button('–°–≤—è–∑—å –º–µ–∂–¥—É –ø–æ–ª–æ–º –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞ –∏ —á–∞–µ–≤—ã–º–∏')    
with col3:
    show_scatter_bill = st.button('–°–≤—è–∑—å —Å—á–µ—Ç–∞ –∏ —á–∞–µ–≤—ã—Ö')

def download_fig(fig, filename, text="–°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫"):
    buf = io.BytesIO()
    fig.savefig(buf, format='png', dpi=300, bbox_inches='tight')
    buf.seek(0)
    st.download_button(
        label=text,
        data=buf,
        file_name=filename,
        mime="image/png"
    )
# –ø–æ–¥–≥—Ä—É–∑–∫–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤
if show_hist:
    st.subheader('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É–º–º —Å—á–µ—Ç–æ–≤')
    fig, ax = plt.subplots(figsize=(10,6))
    sns.histplot(data=tips,
                 x='total_bill',
                 bins=20,
                 kde=True,
                 color='#55ccea')
    st.pyplot(fig)
    download_fig(fig, "histogram_total_bill.png", "üì• –°–∫–∞—á–∞—Ç—å –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É")
if show_scatter_sex:
    st.subheader('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–∞–µ–≤—ã—Ö –ø–æ –ø–æ–ª—É')
    fig, ax = plt.subplots(figsize=(10,6))
    sns.scatterplot(data=tips,
                x='tip',
                y='day',
                hue='sex',
                palette=['pink','lightblue'],
                s=100,
                alpha=0.6,
                edgecolor='grey',
                legend=True)
    st.pyplot(fig)
    download_fig(fig, "scatter_tip_sex.png", "üì• –°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫")
if show_scatter_bill:
    st.subheader('–°–≤—è–∑—å –º–µ–∂–¥—É —Ä–∞–∑–º–µ—Ä–∞–º–∏ —Å—á–µ—Ç–∞ –∏ —á–∞–µ–≤—ã—Ö')  
    fig, ax = plt.subplots(figsize=(10,6))
    sns.scatterplot(data=tips,
                    x='total_bill',
                    y='tip',
                    hue='time',
                    palette='coolwarm')  
    st.pyplot(fig)
    download_fig(fig, "scatter_bill_tip.png", "üì• –°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫")

with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"):
    st.dataframe(tips)

with st.sidebar:
    uploaded_file = st.file_uploader('***–ó–∞–≥—Ä—É–∑–∏*** —Å–≤–æ–π CSV —Ñ–∞–π–ª –ø–æ —á–∞–µ–≤—ã–º –≤ —Ç–≤–æ–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ ', type='csv')
if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    st.success("–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!")
    st.write(df.head(5))
else:
    st.stop()

# –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
with st.expander("üìÅ –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"):
    st.dataframe(tips)
    csv = tips.to_csv(index=False).encode('utf-8')
    st.download_button(
        label="üì• –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ (CSV)",
        data=csv,
        file_name="tips_data.csv",
        mime="text/csv"
    )

# –õ–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫
st.subheader("–î–∏–Ω–∞–º–∏–∫–∞ —Å—É–º–º —Å—á–µ—Ç–æ–≤")
st.line_chart(tips['total_bill'])    
# st.dataframe(tips)
# –ó–∞–≥—Ä—É–∑–∫–∞ CSV —Ñ–∞–π–ª–∞







